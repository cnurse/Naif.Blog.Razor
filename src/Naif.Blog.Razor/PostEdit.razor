@using Microsoft.AspNetCore.Mvc.Rendering
@using Naif.Blog.Models
@using Naif.Blog.ViewModels
@using Naif.Core.Models

<form class="g-3" action="@ActionUrl" method="post">
    @if (Messages != null)
    {
        foreach (var message in Messages)
        {
            string cssClass = String.Empty;
            switch (message.Type)
            {
                case MessageType.Info:
                    cssClass = "alert alert-info";
                    break;
                case MessageType.Error:
                    cssClass = "alert alert-danger";
                    break;
                case MessageType.Success:
                    cssClass = "alert alert-success";
                    break;
            }
            <div class="@cssClass" role="alert">
                @message.Text
            </div>
        }
    }

    <label class="mb-3 row">
        <div  class="col-sm-2 col-form-label">Post Id</div>
        <div class="col-sm-10">
            <input name="PostId" value="@Post.PostId" class="form-control-plaintext" readonly />
        </div>
    </label>
    
    @if (!isPost)
    {
        <label class="mb-3 row">
            <div  class="col-sm-2 col-form-label">Parent Post Id</div>
            <div class="col-sm-10">
                <select name="ParentPostId" class="form-control">
                    @foreach (var parentPage in Pages)
                    {
                        if (parentPage.Value == Post.ParentPostId)
                        {
                            <option selected value="@parentPage.Value">@parentPage.Text</option>
                        }
                        else
                        {
                            <option value="@parentPage.Value">@parentPage.Text</option>
                        }
                    }
                </select>
            </div>
        </label>
    }

    <div class="mb-3 row">
        <label class="mb-3 row">
            <div  class="col-sm-2 col-form-label">Post Type</div>
            <div class="col-sm-3">
                <select name="PostType" class="form-select" @onchange="PostTypeChanged">
                    @foreach (PostType type in Enum.GetValues(typeof(PostType)))
                    {
                        if (type == postType)
                        {
                            <option selected value="@type">@type.ToString()</option>
                        }
                        else
                        {
                            <option value="@type">@type.ToString()</option>
                        }
                    }
                </select>
            </div>
        </label>
        
        @if (!isPost)
        {
            <div class="col-sm-3"></div>
            <label class="mb-3 row">
                <div  class="col-sm-2 col-form-label">Page Order</div>
                <div class="col-sm-2">
                    <input name="PageOrder" value="@Post.PageOrder" class="form-control" />
                </div>
            </label>
        }
    </div>
    
    @if (showPostTypeDetail)
    {
        <label class="mb-3 row">
            <div  class="col-sm-2 col-form-label">@Post.PostType</div>
            <div class="col-sm-10">
                <input name="PostTypeDetail" value="@Post.PostTypeDetail" class="form-control" />
            </div>
        </label>
    }

    @if (showDetail)
    {
        <label class="mb-3 row">
            <div  class="col-sm-2 col-form-label">Title</div>
            <div class="col-sm-10">
                <input value="@Post.Title" class="form-control" />
            </div>
        </label>

        <label class="mb-3 row">
            <div  class="col-sm-2 col-form-label">SubTitle</div>
            <div class="col-sm-10">
                <input value="@Post.SubTitle" class="form-control"/>
            </div>
        </label>
        
        <div class="mb-3 row">
            <label>
                <div  class="col-sm-2 col-form-label">Slug</div>
                <div class="col-sm-5">
                    <input value="@Post.Slug" class="form-control" />
                </div>
            </label>
            <label>
                <div  class="col-sm-2 col-form-label">Author</div>
                <div class="col-sm-3">
                    <input value="@Post.Author" class="form-control" />
                </div>
            </label>
        </div>

        <label class="mb-3 row">
            <div  class="col-sm-2 col-form-label">Excerpt</div>
            <div class="col-sm-10">
                <textarea value="@Post.Excerpt" class="form-control" rows="3"></textarea>
            </div>
        </label>

        <label class="mb-3 row">
            <div  class="col-sm-2 col-form-label">Content</div>
            <div class="col-sm-10">
                <textarea value="@Post.Content" class="form-control" rows="5"></textarea>
            </div>
        </label>
        
        <label class="mb-3 row">
            <div  class="col-sm-2 col-form-label">Categories</div>
            <div class="col-sm-10">
                <input value="@Post.Categories" class="form-control" />
            </div>
        </label>

        <label class="mb-3 row">
            <div  class="col-sm-2 col-form-label">Tags</div>
            <div class="col-sm-10">
                <input value="@Post.Tags" class="form-control" />
            </div>
        </label>
    }

    <div class="mb-3 row form-switch">
        <div class="col-sm-3"></div>
        <div class="col-sm-3">
            <label class="form-check-label">
                <input value="@Post.IncludeInLists" class="form-check-input"/>
                Include In Lists?
            </label>
        </div>
        <div class="col-sm-3">
            <label class="form-check-label">
                <input value="@Post.IsPublished" class="form-check-input"/>
                Published?
            </label>
        </div>
        <div class="col-sm-3"></div>
    </div>

    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
        @if (!String.IsNullOrEmpty(Post.Title))
        {
            <button type="button" class="btn btn-secondary me-md-2 btn-lg" data-bs-toggle="modal" data-bs-target="#@modalId">@DeleteText</button>
            <ConfirmModal Name="@modalId"
                          Title="@DeleteText"
                          Text="@DeleteMessage"
                          CloseText="Close"
                          ConfirmText="Confirm Delete"
                          Url="@DeleteUrl">
            </ConfirmModal>
        }
        
        <button type="submit" class="btn btn-primary btn-lg">Save</button>
    </div>

</form>}

@code {
    private string modalId;

    private bool isPost;
    private PostType postType;
    private bool showDetail;
    private bool showPostTypeDetail;
    
    [Parameter]
    public string ActionUrl { get; set; }

    [Parameter]
    public string DeleteText { get; set; }

    [Parameter]
    public string DeleteMessage { get; set; }

    [Parameter]
    public string DeleteUrl { get; set; }

    [Parameter]
    public List<SelectListItem> Pages { get; set; }
    
    [Parameter]
    public PostViewModel Post { get; set; }
    
    [Parameter]
    public IList<Message> Messages { get; set; }
    
    protected override void OnParametersSet()
    {
        postType = Post.PostType;
        modalId = $"deleteConfirmModal-{Post.PostId}";
        UpdateFlags();
    }

    private void PostTypeChanged(ChangeEventArgs args)
    {
        postType = (PostType)args.Value;
        UpdateFlags();
    }

    private void UpdateFlags()
    {
        isPost = (postType == PostType.Post);
        showPostTypeDetail = postType is PostType.Blog or PostType.Category or PostType.Tag or PostType.Url;
        showDetail = postType is PostType.Post or PostType.Page;
    }

}
