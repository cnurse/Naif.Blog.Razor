@using Naif.Blog.Models

<nav class="@CssClass" role="navigation">
    <div class="container">
        <a class="navbar-brand" href="@homeUrl">@Blog.Title</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarMenu" aria-controls="navbarMenu" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse justify-content-between" id="navbarMenu">
            <Navigation Blog="@Blog" PostId="" CssClass="@MenuCssClass" SubMenuCssClass="@SubMenuCssClass" Depth="@Depth" IncludeParent="@IncludeParent" />
        </div>
        <div class="collapse navbar-collapse justify-content-end" id="profileMenu">
            <ProfileMenu IncludeProfilePicture="true" CssClass="@MenuCssClass" SubMenuCssClass="@SubMenuCssClass" />
        </div>
    </div>
</nav>


@code {
    private string homeUrl;
    
    [Parameter]
    public Blog Blog { get; set; }
    
    [Parameter]
    public string CssClass { get; set; }
    
    [Parameter]
    public int Depth { get; set; }

    [Parameter]
    public bool IncludeParent { get; set; }
    
    [Parameter]
    public string MenuCssClass { get; set; }

    [Parameter]
    public string SubMenuCssClass { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await Task.Run(() =>
        {
            homeUrl = (String.IsNullOrEmpty(Blog.HomeRedirectUrl)) ? "/home" : Blog.HomeRedirectUrl;
        });
    }
}