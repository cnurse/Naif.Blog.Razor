@using System.Net.Security
@using Naif.Core.Models;

@{
	
	void RenderSubMenu(MenuItem item, int level)
	{
		var cssClass = (level == 2) ? SubMenuCssClass : $"{SubMenuCssClass} dropdown-submenu";
		<ul class="@cssClass">
			@{
				foreach(var menuItem in item.Items)
				{
					if(Menu.Depth > level && menuItem.Items.Count > 0)
					{
						<li>
							<a class="dropdown-item" href="#">@((MarkupString)menuItem.Text) &nbsp;&nbsp;&raquo</a>

							@{
                            	RenderSubMenu(menuItem, level + 1);						
                            }
						</li>
					}
					else
					{
						<li>
							<a class="dropdown-item" href="@GetMenuLink(menuItem)">@((MarkupString)menuItem.Text)</a>
						</li>
					}
				}
			}
		</ul>
	}
}

<ul class="@CssClass">
	@{
		var hasItems = Menu.Items.Count > 0;
		foreach (var menuItem in Menu.Items.ToList())
		{
			if (menuItem.IsActive)
			{
				<li class="nav-item">
					<a class="nav-link @Menu.IsActiveCssClass" href="#">@menuItem.Text</a>
				</li>
			}
			else
			{
				if (Menu.Depth > 1  && menuItem.Items.Count > 0)
				{
					<li class="nav-item dropdown">
						<a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false">@((MarkupString)menuItem.Text)</a>

						@{
							RenderSubMenu(menuItem, 2);	
						}
					</li>
				}
				else
				{
					<li class="nav-item">
						<a class="nav-link" href="@GetMenuLink(menuItem)">@((MarkupString)menuItem.Text)</a>
					</li>
				}
			}
		}
		@if (IncludeAdminMenu)
		{
			<AdminMenu CssClass="@SubMenuCssClass" IncludePages="@hasItems" />
		}
	}
</ul>

@code {
	[Parameter]
	public string CssClass { get; set; }
	
	[Parameter]
	public bool IncludeAdminMenu { get; set; }

	[Parameter]
	public Menu Menu { get; set; }

	[Parameter]
	public string SubMenuCssClass { get; set; }

	private string GetMenuLink(MenuItem menuItem)
	{
		string href;
		if (string.IsNullOrEmpty(menuItem.Link))
		{
			href = $"/{menuItem.Controller}/";
			if (!string.IsNullOrEmpty(menuItem.Action))
			{
				href += $"{menuItem.Action}/";
			}
		}
		else
		{
			href = menuItem.Link;
		}

		return href;
	}

}