@using Naif.Blog.Models
@using Naif.Core.Models

@inherits Naif.Blog.Razor.MenuComponentBase

<section class="categoryList">
    <h2>Categories</h2>
    <MenuBar Menu="@_menu"></MenuBar>
</section>

@code {
    private Menu _menu;
    
    [Parameter]
    public Blog Blog { get; set; }

    [Parameter]
    public int Count { get; set; } = -1;

    [Parameter]
    public string CssClass { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        _menu = new Menu
        {
            CssClass = CssClass,
            IsActiveCssClass = "active",
            Items = new List<MenuItem>()
        };
			
        await Task.Run(() =>
        {
            IEnumerable<Category> categories = (Count < 0) 
                        ? Blog.Categories.OrderByDescending(c => c.Count)
                        : Blog.Categories.OrderByDescending(c => c.Count).Take(Count);
            foreach (var category in categories)
            {
                var menuItem = new MenuItem()
                {
                    IsActive = false,
                    Link = $"/category/{category.Name}",
                    Text = $"{category.Name} - ({category.Count})"
                };
                _menu.Items.Add(menuItem);
            }
        });
    }
}